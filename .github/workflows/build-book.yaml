on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # run every day at 11 PM
    #commented out scheduled builds for now
    #but doing that stooped builds when pushing changes too ! 
    - cron: '0 23 * * *'

name: build-book


jobs:
  build:
    runs-on: macOS-latest
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      isExtPR: ${{ github.event.pull_request.head.repo.fork == true }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        id: install-r
        with:
          crayon.enabled: 'FALSE'

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Install pak and query dependencies
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          saveRDS(pak::local_dev_deps_tree(), ".github/r-depends.rds")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.R_LIBS_USER }}
            !${{ env.R_LIBS_USER }}/pak
          key: ${{ runner.os }}-${{ steps.get-r-version.outputs.version }}-4-
          
      - name: Install macOS system dependencies
        if: runner.os == 'macOS'
        run: |
          brew install libgit2
          brew install automake udunits
          brew install pkg-config
          brew install gdal
          install.packages("sf", configure.args = "--with-proj-lib=/usr/local/lib/")
      - name: Install dependencies
        run: |
          pak::local_install_dev_deps(upgrade = TRUE)
        shell: Rscript {0}
 
      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Configure Git user
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Cache bookdown results
        uses: actions/cache@v2
        with:
          path: _bookdown_files
          key: bookdown-2-${{ hashFiles('**/*Rmd') }}

      - name: Build site
        run: Rscript -e 'bookdown::render_book("index.Rmd", quiet = TRUE)'

      - name: Copy
        run: cp _redirects _book/

      - name: Deploy to Netlify
        if: contains(env.isExtPR, 'false')
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './_book'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message:
            'Deploy from GHA: ${{ github.event.pull_request.title || github.event.head_commit.message }} (${{ github.sha }})'
          # these all default to 'true'
          enable-pull-request-comment: false
          enable-commit-comment: false
          # enable-commit-status: true
          #o verwrites-pull-request-comment: true
        timeout-minutes: 1
